{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cfg19\\\\OneDrive\\\\Desktop\\\\SDHacks-2021\\\\front-end\\\\src\\\\components\\\\InputForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect } from 'react';\nimport * as firebase from 'firebase';\nimport storage from \"../index\";\nimport FileBase from 'react-file-base64';\nimport '../styling/InputForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputForm = () => {\n  _s();\n\n  const [picture, setPicture] = React.useState(\"\");\n  const [pictureSubmitted, setPictureSubmitted] = React.useState(false); //const storage = firebase.storage();\n\n  const handleFileUpload = async e => {\n    setPictureSubmitted(true);\n    const image = e.target.files[0];\n    console.log(\"image is \" + image.name);\n\n    if (image.name != undefined) {\n      console.log(storage);\n      const uploadTask = firebase.storage.ref('/images/' + image.name).put(image);\n      uploadTask.on(\"state_changed\", snapshot => {\n        // progress function ...\n        const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        this.setState({\n          progress\n        });\n      }, error => {\n        // Error function ...\n        console.log(error);\n      }, () => {\n        // complete function ...\n        storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n          this.setState({\n            url\n          });\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"UploadSection\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"#\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"InputWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"UploadNewPhotoButton\",\n          for: \"photo-upload\",\n          children: [\" Upload Homework\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"FileChooser\",\n            type: \"file\",\n            id: \"photo-upload\",\n            onChange: handleFileUpload,\n            accept: \"image/*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(FileBase, {\n            type: \"file\",\n            multiple: false,\n            onDone: ({\n              base64\n            }) => console.log(base64)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InputForm, \"NA3DiqLlKnLHQ95bWwWg1k9+Mu8=\");\n\n_c = InputForm;\nexport default InputForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"sources":["C:/Users/cfg19/OneDrive/Desktop/SDHacks-2021/front-end/src/components/InputForm.js"],"names":["React","Component","useEffect","firebase","storage","FileBase","InputForm","picture","setPicture","useState","pictureSubmitted","setPictureSubmitted","handleFileUpload","e","image","target","files","console","log","name","undefined","uploadTask","ref","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","setState","error","child","getDownloadURL","then","url","base64"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAO,0BAAP;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,KAAK,CAACS,QAAN,CAAe,EAAf,CAA9B;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CX,KAAK,CAACS,QAAN,CAAe,KAAf,CAAhD,CAHoB,CAIpB;;AAGA,QAAMG,gBAAgB,GAAG,MAAOC,CAAP,IAAa;AAClCF,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACA,UAAMG,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcJ,KAAK,CAACK,IAAhC;;AACA,QAAIL,KAAK,CAACK,IAAN,IAAcC,SAAlB,EAA6B;AACzBH,MAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ;AACA,YAAMiB,UAAU,GAAGlB,QAAQ,CAACC,OAAT,CAAiBkB,GAAjB,CAAqB,aAAWR,KAAK,CAACK,IAAtC,EAA4CI,GAA5C,CAAgDT,KAAhD,CAAnB;AAEAO,MAAAA,UAAU,CAACG,EAAX,CACI,eADJ,EAEIC,QAAQ,IAAI;AACV;AACA,cAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CACdH,QAAQ,CAACI,gBAAT,GAA4BJ,QAAQ,CAACK,UAAtC,GAAoD,GADrC,CAAjB;AAGA,aAAKC,QAAL,CAAc;AAAEL,UAAAA;AAAF,SAAd;AACD,OARL,EASIM,KAAK,IAAI;AACP;AACAf,QAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ;AACD,OAZL,EAaI,MAAM;AACJ;AACA5B,QAAAA,OAAO,CACJkB,GADH,CACO,QADP,EAEGW,KAFH,CAESnB,KAAK,CAACK,IAFf,EAGGe,cAHH,GAIGC,IAJH,CAIQC,GAAG,IAAI;AACX,eAAKL,QAAL,CAAc;AAAEK,YAAAA;AAAF,WAAd;AACD,SANH;AAOD,OAtBL;AAwBH;AAEJ,GAlCD;;AAsCA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACI;AAAM,MAAA,MAAM,EAAC,GAAb;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,sBAAjB;AAAwC,UAAA,GAAG,EAAC,cAA5C;AAAA,sDACI;AAAO,YAAA,SAAS,EAAC,aAAjB;AAA+B,YAAA,IAAI,EAAC,MAApC;AAA2C,YAAA,EAAE,EAAC,cAA9C;AAA6D,YAAA,QAAQ,EAAExB,gBAAvE;AAAyF,YAAA,MAAM,EAAC;AAAhG;AAAA;AAAA;AAAA;AAAA,kBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA,iCAEA,QAAC,QAAD;AAAU,YAAA,IAAI,EAAC,MAAf;AAAsB,YAAA,QAAQ,EAAE,KAAhC;AAAuC,YAAA,MAAM,EAAE,CAAC;AAAEyB,cAAAA;AAAF,aAAD,KAAgBpB,OAAO,CAACC,GAAR,CAAYmB,MAAZ;AAA/D;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA9DD;;GAAM/B,S;;KAAAA,S;AAgEN,eAAeA,SAAf","sourcesContent":["import React, {Component, useEffect} from 'react';\r\nimport * as firebase from 'firebase';\r\nimport storage from \"../index\";\r\nimport FileBase from 'react-file-base64';\r\nimport '../styling/InputForm.css';\r\n\r\nconst InputForm = () => {\r\n\r\n    const [picture, setPicture] = React.useState(\"\");\r\n    const [pictureSubmitted, setPictureSubmitted] = React.useState(false);\r\n    //const storage = firebase.storage();\r\n\r\n\r\n    const handleFileUpload = async (e) => {\r\n        setPictureSubmitted(true);\r\n        const image = e.target.files[0];\r\n        console.log(\"image is \" + image.name);\r\n        if (image.name != undefined) {\r\n            console.log(storage);\r\n            const uploadTask = firebase.storage.ref('/images/'+image.name).put(image);\r\n\r\n            uploadTask.on(\r\n                \"state_changed\",\r\n                snapshot => {\r\n                  // progress function ...\r\n                  const progress = Math.round(\r\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n                  );\r\n                  this.setState({ progress });\r\n                },\r\n                error => {\r\n                  // Error function ...\r\n                  console.log(error);\r\n                },\r\n                () => {\r\n                  // complete function ...\r\n                  storage\r\n                    .ref(\"images\")\r\n                    .child(image.name)\r\n                    .getDownloadURL()\r\n                    .then(url => {\r\n                      this.setState({ url });\r\n                    });\r\n                }\r\n              );\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"UploadSection\">\r\n            <form action=\"#\">\r\n                <div className=\"InputWrapper\">\r\n                    <label className=\"UploadNewPhotoButton\" for=\"photo-upload\"> Upload Homework \r\n                        <input className=\"FileChooser\" type='file' id='photo-upload' onChange={handleFileUpload} accept='image/*' />\r\n                    </label>\r\n                    <div>\r\n                        \r\n                    <FileBase type=\"file\" multiple={false} onDone={({ base64 }) => console.log(base64)} />\r\n                    </div>\r\n\r\n                    {/* {pictureSubmitted && <button className=\"ConfirmSubmit\" onClick={confirmPhotoUpload}>Submit</button>} */}\r\n                </div>\r\n            </form>\r\n        </div>\r\n     ); \r\n}\r\n\r\nexport default InputForm;"]},"metadata":{},"sourceType":"module"}